getwd()
scenario_df <- read.csv(file="../scenario_df.csv")
scenario_df <- read.csv(file="../scenario_df.csv", stringsAsFactors = FALSE)
scenario_df <- read.csv(file="../scenario_df.csv", stringsAsFactors = FALSE)
for(scenario %in% scenario_df$scenario){
df <- readRDS(paste0(scenario,".rds"))
assign(scenario, df)
}
scenario_df$scenario
for(scenario in scenario_df$scenario){
df <- readRDS(paste0(scenario,".rds"))
assign(scenario, df)
}
rm(df)
null
eval("null")
eval(as.name("null"))
as.name(scenario_df$scenario)
lapply(scenario_df$scenario, as.name)
obj_list <- lapply(scenario_df$scenario, as.name)
all <- Reduce(rbind, lapply(obj_list,eval))
all
rm(scenario_df$scenario)
scenario_df$scenario
rm
?rm
rm(list=scenario_df$scenario)
rm(obj_list)
rm(obj_list, scenario)
head(all)
head(scenario)
head(scenario_df)
.libPaths()
.libPaths("../library")
r
.libPaths("../library")
.libPaths()
install.packages("tidyr")
getwd()
.libPaths("../library")
install.packages("tidyr")
install.packages("Rcpp")
install.packages("tidyr")
install.packages("tibble")
install.packages("tidyr")
library(tidyr)
scenario_df <- read.csv(file="../scenario_df.csv", stringsAsFactors = FALSE)
for(scenario in scenario_df$scenario){
df <- readRDS(paste0(scenario,".rds"))
assign(scenario, df)
}
obj_list <- lapply(scenario_df$scenario, as.name)
all <- Reduce(rbind, lapply(obj_list,eval))
rm(list=scenario_df$scenario)
rm(obj_list, scenario)
all <- left_joint(all, scenario_df, by="scenario")
all <- left_join(all, scenario_df, by="scenario")
?left_join
library(dplyr)
all <- left_join(all, scenario_df, by="scenario")
head(all)
library(ggplot2)
install.packages("ggplot2")
View(all)
all %<>% mutate(hr=ifelse( arm=="rxE1",hr1,hr2))
library(magrittr)
all %<>% mutate(hr=ifelse( arm=="rxE1",hr1,hr2))
all %>% ggplot2(aes(y=power,x=hr, group=rule))+geom_line()+facet_wrap(~arm)
library(ggplot2)
all %>% ggplot2(aes(y=power,x=hr, group=rule))+geom_line()+facet_wrap(~arm)
all %>% ggplot(aes(y=power,x=hr, group=rule))+geom_line()+facet_wrap(~arm)
all %>% ggplot(aes(y=power,x=hr, group=rule, colour=rule))+geom_line()+facet_wrap(~arm)
all_long <- gather(all,key="metric",value="value", power, biase,mse, coverage, bayes_mse, bayes_bias, bayes_coverage)
all_long <- gather(all,key="metric",value="value", power, bias,mse, coverage, bayes_mse, bayes_bias, bayes_coverage)
all_long %>% ggplot(aes(y=value,x=hr, group=rule, colour=rule))+geom_line()+facet_grid(metric~arm)
all_long %>% ggplot(aes(y=value,x=hr, group=rule, colour=rule))+geom_line()+
facet_grid(arm~metric)
# my house
phi <- 52.2004/180*pi
theta <- 0.145920/180*pi
vertical <- c(sin(phi), cos(phi)*sin(theta), cos(phi)*cos(theta))
hor_north <- c(cos(phi), -cos(phi)*sin(theta), -cos(phi)*cos(theta))
vertical%*%hor_north
h <- c(sqrt(2),0,0)-vertical
vertical %*% h
vertical+h
horizontal <- c(cos(phi), -sin(phi)*sin(theta), -sin(phi)*cos(theta))
vertical%*%horizontal
horizontal_north <- c(cos(phi), -sin(phi)*sin(theta), -sin(phi)*cos(theta))
vertical%*%horizontal
horizontal_east <- cross(vertical, horizontal)
e3%*%horizontal
horizontal_east%*%horizontal_north
horizontal_east <- cross(vertical, horizontal_north)
horizontal_east%*%horizontal_north
horizontal_east <- cross(vertical, horizontal_north)
cross <- function(v1,v2){
c( v1[2]*v2[3]-v1[3]*v2[2],
-v1[1]*v2[3]+v1[3]*v2[1],
-v1[2]*v2[1]+v1[1]*v2[2]
)
}
r_north <- c(1,0,0)
# my house
phi <- 52.2004/180*pi
theta <- 0.145920/180*pi
vertical <- c(sin(phi), cos(phi)*sin(theta), cos(phi)*cos(theta))
horizontal_north <- c(cos(phi), -sin(phi)*sin(theta), -sin(phi)*cos(theta))
vertical%*%horizontal
horizontal_east <- cross(vertical, horizontal_north)
horizontal_east%*%horizontal_north
e3%*%e3
horizontal_east%*%north
horizontal_east%*%vertical
horizontal_east%*%horizontal_east
horizontal1 <- cos(gamma)*horizontal_north+sin(gamma)*horizontal_east
# compass bearing of the wall.
gamma <- 25*pi/180
horizontal1 <- cos(gamma)*horizontal_north+sin(gamma)*horizontal_east
horizontal1%*%horizontal1
horizontal1%*%vertical
X <- cbind(horizontal1, vertical)
X %*% solve(t(X)%*%X) %*% t(X) %*%r_north
proj_north <-   X %*% solve(t(X)%*%X) %*% t(X) %*%r_north
proj_north %*% proj_north
proj_north <-   X %*% solve(t(X)%*%X) %*% t(X) %*%r_north
proj_north %*% proj_north
proj_north <-   X %*% solve(t(X)%*%X) %*% t(X) %*%r_north
t(proj_north) %*% proj_north
(coords <- solve(t(X)%*%X) %*% t(X) %*%r_north)
en
len
len <- function(x){
x <- as.vector(x)
sqrt(x%*%x)
}
len(r_north)
len(proj_north)
len <- function(x){
x <- as.vector(x)
as.vector(sqrt(x%*%x))
}
len(r_north)
len(proj_north)
effective_lat <- acos( t(proj_north)%*%r_north/len(proj_north) )
effective_lat
effective_lat*180/pi
effective_lat *180/pi
#If north wire is height h=1, set East wire at height
sin(effective_lat)
#0.259
#origin of the clock dial is
-sin(effective_lat)/tan(effective_lat)
#direction of North on dial
(coords <- solve(t(X)%*%X) %*% t(X) %*%r_north)
-cos(effective_lat)
15*12
rotate <- function(hour, north){
angle <- hour*15/180*pi
ca <- cos(angle)
sa <- sin(angle)
X <- matrix(c(ca,sa,-sa,ca),nrow = 2)
X
}
rotate(1)
rotate <- function(hour, north){
angle <- hour*15/180*pi
ca <- cos(angle)
sa <- sin(angle)
X <- matrix(c(ca,sa,-sa,ca),nrow = 2)
X%*%north
}
for( hour in -6:6){
rotate(hour,r_north)
}
for( hour in -6:6){
rotate(hour,coords)
}
for( hour in -6:6){
print(rotate(hour,coords))
}
coords
lines <- c(0,0)
for( hour in -6:6){
lines <- cbind(lines,rotate(hour,coords))
}
lines
?lines
clock <- c(0,0)
clock <- c(0,0)
for( hour in -6:6){
clock <- cbind(clock,rotate(hour,coords))
}
rm(lines)
clock
eqscplot(0,0)
?MASS::eqscplot
MASS::eqscplot(0,0)
MASS::eqscplot(0,0, xlim=c(-1,1),ylim=c(-1,1))
for( i in 1:ncol(clock)){
lines(x=c(0,clock[1,i]), y=c(0,clock[2,i]))
}
MASS::eqscplot(0,0, xlim=c(-1,1),ylim=c(-1,1))
for( i in 1:ncol(clock)){
lines(x=c(0,clock[1,i]), y=c(0,clock[2,i]))
}
